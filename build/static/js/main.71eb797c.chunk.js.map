{"version":3,"sources":["logo.svg","components/atoms/Button.js","components/molecules/GradientBox.js","components/GradientGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["CustomButtom","styled","button","Button","this","props","name","handleClick","onClick","Component","GridBox","div","config","vDir","hDir","color1","color2","GridWrapper","Pre","pre","GrdientBox","generateColor","pattern1","split","pattern2","Array","map","item","key","Math","floor","random","length","setState","state","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAAe,I,8DCGTA,EAAeC,IAAOC,OAAV,iaAqBGC,E,4JACjB,WAAS,IAAD,EAC0BC,KAAKC,MAA3BC,EADJ,EACIA,KAAMC,EADV,EACUA,YACd,OACI,cAACP,EAAD,CAAcQ,QAASD,EAAvB,SAAqCD,Q,GAJbG,aCpB9BC,EAAUT,IAAOU,IAAV,+MAMwB,SAAAN,GAAK,OAAIA,EAAMO,OAAOC,QAAQ,SAAAR,GAAK,OAAIA,EAAMO,OAAOE,QAAS,SAAAT,GAAK,OAAIA,EAAMO,OAAOG,UAAY,SAAAV,GAAK,OAAIA,EAAMO,OAAOI,UAGpJC,EAAchB,IAAOU,IAAV,4KAQXO,EAAMjB,IAAOkB,IAAV,qKASYC,E,kDACjB,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IASVgB,cAAgB,WACZ,IAAMC,EAAW,SAASC,MAAM,IAC1BC,EAAU,OAAOD,MAAM,IACzBR,EAAS,IACTC,EAAS,IACb,YAAIS,MAAM,IAAIC,KAAI,SAACC,EAAMC,GACrB,OACIb,GAAUO,EAASO,KAAKC,MAAMD,KAAKE,SAAWT,EAASU,SACvDhB,GAAUQ,EAASK,KAAKC,MAAMD,KAAKE,SAAWP,EAASQ,YAGhE,EAAKC,SAAS,CAAElB,OAAQA,EAAQC,OAAQA,KAnBvC,EAAKkB,MAAO,CACRnB,OAAQ,UACRC,OAAQ,UACRF,KAAM,OACND,KAAM,UANK,E,0CAyBnB,WAAS,IAAD,OACJ,OACI,cAACH,EAAD,CAASE,OAAQR,KAAK8B,MAAtB,SACI,eAACjB,EAAD,WACI,cAAC,EAAD,CAAQV,YAAa,kBAAM,EAAKc,iBAAiBf,KAAK,aACtD,eAACY,EAAD,6CACoCd,KAAK8B,MAAMrB,KAD/C,IACsDT,KAAK8B,MAAMpB,KADjE,IACwEV,KAAK8B,MAAMnB,OADnF,KAC6FX,KAAK8B,MAAMlB,OADxG,iB,GA/BoBP,aC1BnB0B,E,4JACjB,WACI,OAAO,cAAC,EAAD,Q,GAFwB1B,aCQxB2B,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,OCKSE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.71eb797c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from \"react\";\nimport styled from 'styled-components';\n\nconst CustomButtom = styled.button`\n    border-radius:45px;\n    padding:15px 0;\n    width:100%;\n    text-align:center;\n    border: none;\n    background: #45ab74;\n    outline:none;\n    font-size:15px;\n    cursor:pointer;\n    color:#fff;\n    font-weight: bold;\n    font-family: 'Montserrat', sans-serif;\n    text-transform: uppercase;\n\n    :hover{\n        box-shadow: 0 10px 30px -15px rgb(0 0 0 / 90%);\n    }\n`;\n\n\nexport default class Button extends Component {\n    render(){\n        const { name, handleClick } = this.props;\n        return(\n            <CustomButtom onClick={handleClick}>{name}</CustomButtom>\n        )\n    }\n};\n","import  React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Button from '../atoms/Button';\n\nconst GridBox = styled.div`\n    background: #ffffff;\n    height: 100vh;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(to ${props => props.config.vDir} ${props => props.config.hDir}, ${props => props.config.color1} , ${props => props.config.color2});\n`;\n\nconst GridWrapper = styled.div`\n    padding: 30px;\n    width: 300px;\n    background: #ffffff;\n    border-radius: 10px;\n    box-shadow: 0 10px 30px -15px rgb(0 0 0 / 20%);\n`;\n\nconst Pre = styled.pre`\n    white-space: pre-wrap;\n    padding: 20px;\n    background: #000;\n    color: #fff;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nexport default class GrdientBox extends Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            color1: '#daffff',\n            color2: '#ddfffd',\n            hDir: 'left', // left, right\n            vDir: 'bottom' // top, bottom\n        };\n    };\n\n    generateColor = () => {\n        const pattern1 = 'abcdef'.split('');\n        const pattern2= 'cdef'.split('');\n        let color1 = '#';\n        let color2 = '#';\n        [...Array(6)].map((item, key) =>{ \n            return (\n                color1 += pattern1[Math.floor(Math.random() * pattern1.length)],\n                color2 += pattern2[Math.floor(Math.random() * pattern2.length)]\n            );\n        });\n       this.setState({ color1: color1, color2: color2 });\n\n    };\n\n    render(){\n        return(\n            <GridBox config={this.state}>\n                <GridWrapper>\n                    <Button handleClick={() => this.generateColor()} name=\"Generate\" />\n                    <Pre>\n                        background: linear-gradient(to {this.state.vDir} {this.state.hDir},{this.state.color1}, {this.state.color2});\n                    </Pre>\n                </GridWrapper>\n            </GridBox>\n        )\n    }\n};\n","import  React, { Component } from 'react';\nimport GradientBox from '../components/molecules/GradientBox';\n\n\nexport default class className extends Component {\n    render(){\n        return(<GradientBox></GradientBox>)\n    }\n};\n","import logo from './logo.svg';\nimport './App.css';\nimport GradientGenertor from '../src/components/GradientGenerator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GradientGenertor></GradientGenertor>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}